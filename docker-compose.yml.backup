version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: max_db
    environment:
      POSTGRES_DB: claude_max
      POSTGRES_USER: claude
      POSTGRES_PASSWORD: ${DB_PASSWORW:-ThisISverySecure!}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U claude"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: max_cache
    command: redis-server --appendonly yes --maxmemory 256mb
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: max_api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://claude:${DB_PASSWORD:-ThisISverySecure!}@postgres:5432/claude_max
      REDIS_URL: redis://redis:6379
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      PORT: 8000
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: max_web
    environment:
      NEXT_PUBLIC_API_URL: http://192.168.1.8:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: max_network
