services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: max_dev_db
    environment:
      POSTGRES_DB: claude_max_dev
      POSTGRES_USER: claude
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U claude"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: max_dev_cache
    command: redis-server --appendonly yes --maxmemory 256mb
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: max_dev_api
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://claude:${DB_PASSWORD}@postgres:5432/claude_max_dev
      REDIS_URL: redis://redis:6379
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      PORT: 8000
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: http://192.168.1.8:8001
    container_name: max_dev_web
    environment:
      NEXT_PUBLIC_API_URL: http://192.168.1.8:8001
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3001:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  default:
    name: max_dev_network